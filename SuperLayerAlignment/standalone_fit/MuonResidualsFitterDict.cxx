//
// File generated by rootcint at Thu May 30 22:33:43 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME MuonResidualsFitterDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MuonResidualsFitterDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Alignable Alignable;
      #else
      class Alignable  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::Alignable::Surface Surface;
         #else
         class Surface  {
            public:
            //friend XX;
         };
         #endif

         Surface s; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TFileDirectory TFileDirectory;
      #else
      class TFileDirectory  {
         public:
         //friend XX;
      };
      #endif

      namespace cms {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::cms::Exception Exception;
      #else
      class Exception  :  public ::exception {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~Exception() throw() {};
         string name; //
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonResidualsFitter MuonResidualsFitter;
      #else
      class MuonResidualsFitter  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::MuonResidualsFitter::MuonAlignmentTreeRow MuonAlignmentTreeRow;
         #else
         class MuonAlignmentTreeRow  {
            public:
            //friend XX;
            bool is_plus; //for +- endcap
            bool is_dt; //DT or CSC
            unsigned char station; //8bit uint
            char ring_wheel; //
            unsigned char sector; //
            float res_x; //
            float res_y; //
            float res_slope_x; //
            float res_slope_y; //
            float pos_x; //
            float pos_y; //
            float angle_x; //
            float angle_y; //
            float pz; //
            float pt; //
            char q; //
            bool select; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~MuonResidualsFitter() throw() {};
         ::Alignable m_ali; //
         ::TFileDirectory m_dir; //
         float m_peakNSigma; //
         int m_residualsModel; //
         int m_minHits; //
         int m_useResiduals; //
         bool m_weightAlignment; //
         vector< bool > m_fixed; //
         map< int, double > m_parNum2InitValue; //
         int m_printLevel; //
         int m_strategy; //
         vector< double* > m_residuals; //
         vector< bool > m_residuals_ok; //
         vector< double > m_value; //
         vector< double > m_error; //
         ::TMatrixTSym< double > m_cov; //
         double m_loglikelihood; //
         map< int, int > m_parNum2parIdx; //
         double m_center[20]; //
         double m_radii[20]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonResiduals6DOFFitter MuonResiduals6DOFFitter;
      #else
      class MuonResiduals6DOFFitter  :  public ::MuonResidualsFitter {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~MuonResiduals6DOFFitter() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonResiduals5DOFFitter MuonResiduals5DOFFitter;
      #else
      class MuonResiduals5DOFFitter  :  public ::MuonResidualsFitter {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~MuonResiduals5DOFFitter() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonResiduals6DOFrphiFitter MuonResiduals6DOFrphiFitter;
      #else
      class MuonResiduals6DOFrphiFitter  :  public ::MuonResidualsFitter {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~MuonResiduals6DOFrphiFitter() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Alignable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Alignable_Dictionary();
   static void *new_Alignable(void *p = 0);
   static void *newArray_Alignable(Long_t size, void *p);
   static void delete_Alignable(void *p);
   static void deleteArray_Alignable(void *p);
   static void destruct_Alignable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Alignable*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Alignable) == sizeof(::ROOT::Shadow::Alignable));
      ::Alignable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Alignable),0);
      static ::ROOT::TGenericClassInfo 
         instance("Alignable", "./MuonResidualsFitter.h", 38,
                  typeid(::Alignable), DefineBehavior(ptr, ptr),
                  &Alignable_ShowMembers, &Alignable_Dictionary, isa_proxy, 4,
                  sizeof(::Alignable) );
      instance.SetNew(&new_Alignable);
      instance.SetNewArray(&newArray_Alignable);
      instance.SetDelete(&delete_Alignable);
      instance.SetDeleteArray(&deleteArray_Alignable);
      instance.SetDestructor(&destruct_Alignable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Alignable*)
   {
      return GenerateInitInstanceLocal((::Alignable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Alignable*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Alignable_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Alignable*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void AlignablecLcLSurface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AlignablecLcLSurface_Dictionary();
   static void *new_AlignablecLcLSurface(void *p = 0);
   static void *newArray_AlignablecLcLSurface(Long_t size, void *p);
   static void delete_AlignablecLcLSurface(void *p);
   static void deleteArray_AlignablecLcLSurface(void *p);
   static void destruct_AlignablecLcLSurface(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Alignable::Surface*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Alignable::Surface) == sizeof(::ROOT::Shadow::Alignable::Surface));
      ::Alignable::Surface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Alignable::Surface),0);
      static ::ROOT::TGenericClassInfo 
         instance("Alignable::Surface", "./MuonResidualsFitter.h", 41,
                  typeid(::Alignable::Surface), DefineBehavior(ptr, ptr),
                  &AlignablecLcLSurface_ShowMembers, &AlignablecLcLSurface_Dictionary, isa_proxy, 4,
                  sizeof(::Alignable::Surface) );
      instance.SetNew(&new_AlignablecLcLSurface);
      instance.SetNewArray(&newArray_AlignablecLcLSurface);
      instance.SetDelete(&delete_AlignablecLcLSurface);
      instance.SetDeleteArray(&deleteArray_AlignablecLcLSurface);
      instance.SetDestructor(&destruct_AlignablecLcLSurface);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Alignable::Surface*)
   {
      return GenerateInitInstanceLocal((::Alignable::Surface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Alignable::Surface*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AlignablecLcLSurface_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Alignable::Surface*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TFileDirectory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TFileDirectory_Dictionary();
   static void *new_TFileDirectory(void *p = 0);
   static void *newArray_TFileDirectory(Long_t size, void *p);
   static void delete_TFileDirectory(void *p);
   static void deleteArray_TFileDirectory(void *p);
   static void destruct_TFileDirectory(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TFileDirectory*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TFileDirectory) == sizeof(::ROOT::Shadow::TFileDirectory));
      ::TFileDirectory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TFileDirectory),0);
      static ::ROOT::TGenericClassInfo 
         instance("TFileDirectory", "./MuonResidualsFitter.h", 50,
                  typeid(::TFileDirectory), DefineBehavior(ptr, ptr),
                  &TFileDirectory_ShowMembers, &TFileDirectory_Dictionary, isa_proxy, 4,
                  sizeof(::TFileDirectory) );
      instance.SetNew(&new_TFileDirectory);
      instance.SetNewArray(&newArray_TFileDirectory);
      instance.SetDelete(&delete_TFileDirectory);
      instance.SetDeleteArray(&deleteArray_TFileDirectory);
      instance.SetDestructor(&destruct_TFileDirectory);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TFileDirectory*)
   {
      return GenerateInitInstanceLocal((::TFileDirectory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TFileDirectory*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TFileDirectory_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TFileDirectory*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace cms {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void cms_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("cms", 0 /*version*/, "./MuonResidualsFitter.h", 61,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &cms_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void cms_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void cmscLcLException_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void cmscLcLException_Dictionary();
   static void delete_cmscLcLException(void *p);
   static void deleteArray_cmscLcLException(void *p);
   static void destruct_cmscLcLException(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::cms::Exception*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::cms::Exception) == sizeof(::ROOT::Shadow::cms::Exception));
      ::cms::Exception *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::cms::Exception),0);
      static ::ROOT::TGenericClassInfo 
         instance("cms::Exception", "./MuonResidualsFitter.h", 63,
                  typeid(::cms::Exception), DefineBehavior(ptr, ptr),
                  &cmscLcLException_ShowMembers, &cmscLcLException_Dictionary, isa_proxy, 4,
                  sizeof(::cms::Exception) );
      instance.SetDelete(&delete_cmscLcLException);
      instance.SetDeleteArray(&deleteArray_cmscLcLException);
      instance.SetDestructor(&destruct_cmscLcLException);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::cms::Exception*)
   {
      return GenerateInitInstanceLocal((::cms::Exception*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::cms::Exception*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void cmscLcLException_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::cms::Exception*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonResidualsFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonResidualsFitter_Dictionary();
   static void delete_MuonResidualsFitter(void *p);
   static void deleteArray_MuonResidualsFitter(void *p);
   static void destruct_MuonResidualsFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonResidualsFitter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonResidualsFitter) == sizeof(::ROOT::Shadow::MuonResidualsFitter));
      ::MuonResidualsFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonResidualsFitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonResidualsFitter", "./MuonResidualsFitter.h", 81,
                  typeid(::MuonResidualsFitter), DefineBehavior(ptr, ptr),
                  &MuonResidualsFitter_ShowMembers, &MuonResidualsFitter_Dictionary, isa_proxy, 4,
                  sizeof(::MuonResidualsFitter) );
      instance.SetDelete(&delete_MuonResidualsFitter);
      instance.SetDeleteArray(&deleteArray_MuonResidualsFitter);
      instance.SetDestructor(&destruct_MuonResidualsFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonResidualsFitter*)
   {
      return GenerateInitInstanceLocal((::MuonResidualsFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonResidualsFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonResidualsFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonResidualsFittercLcLMuonAlignmentTreeRow_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonResidualsFittercLcLMuonAlignmentTreeRow_Dictionary();
   static void *new_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p = 0);
   static void *newArray_MuonResidualsFittercLcLMuonAlignmentTreeRow(Long_t size, void *p);
   static void delete_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p);
   static void deleteArray_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p);
   static void destruct_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonResidualsFitter::MuonAlignmentTreeRow*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonResidualsFitter::MuonAlignmentTreeRow) == sizeof(::ROOT::Shadow::MuonResidualsFitter::MuonAlignmentTreeRow));
      ::MuonResidualsFitter::MuonAlignmentTreeRow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonResidualsFitter::MuonAlignmentTreeRow),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonResidualsFitter::MuonAlignmentTreeRow", "./MuonResidualsFitter.h", 112,
                  typeid(::MuonResidualsFitter::MuonAlignmentTreeRow), DefineBehavior(ptr, ptr),
                  &MuonResidualsFittercLcLMuonAlignmentTreeRow_ShowMembers, &MuonResidualsFittercLcLMuonAlignmentTreeRow_Dictionary, isa_proxy, 4,
                  sizeof(::MuonResidualsFitter::MuonAlignmentTreeRow) );
      instance.SetNew(&new_MuonResidualsFittercLcLMuonAlignmentTreeRow);
      instance.SetNewArray(&newArray_MuonResidualsFittercLcLMuonAlignmentTreeRow);
      instance.SetDelete(&delete_MuonResidualsFittercLcLMuonAlignmentTreeRow);
      instance.SetDeleteArray(&deleteArray_MuonResidualsFittercLcLMuonAlignmentTreeRow);
      instance.SetDestructor(&destruct_MuonResidualsFittercLcLMuonAlignmentTreeRow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonResidualsFitter::MuonAlignmentTreeRow*)
   {
      return GenerateInitInstanceLocal((::MuonResidualsFitter::MuonAlignmentTreeRow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonResidualsFitter::MuonAlignmentTreeRow*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonResidualsFittercLcLMuonAlignmentTreeRow_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitter::MuonAlignmentTreeRow*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonResidualsFitterFitInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MuonResidualsFitterFitInfo(void *p);
   static void deleteArray_MuonResidualsFitterFitInfo(void *p);
   static void destruct_MuonResidualsFitterFitInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonResidualsFitterFitInfo*)
   {
      ::MuonResidualsFitterFitInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MuonResidualsFitterFitInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonResidualsFitterFitInfo", ::MuonResidualsFitterFitInfo::Class_Version(), "./MuonResidualsFitter.h", 250,
                  typeid(::MuonResidualsFitterFitInfo), DefineBehavior(ptr, ptr),
                  &::MuonResidualsFitterFitInfo::Dictionary, isa_proxy, 4,
                  sizeof(::MuonResidualsFitterFitInfo) );
      instance.SetDelete(&delete_MuonResidualsFitterFitInfo);
      instance.SetDeleteArray(&deleteArray_MuonResidualsFitterFitInfo);
      instance.SetDestructor(&destruct_MuonResidualsFitterFitInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonResidualsFitterFitInfo*)
   {
      return GenerateInitInstanceLocal((::MuonResidualsFitterFitInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonResidualsFitterFitInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void MuonResiduals6DOFFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonResiduals6DOFFitter_Dictionary();
   static void delete_MuonResiduals6DOFFitter(void *p);
   static void deleteArray_MuonResiduals6DOFFitter(void *p);
   static void destruct_MuonResiduals6DOFFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonResiduals6DOFFitter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonResiduals6DOFFitter) == sizeof(::ROOT::Shadow::MuonResiduals6DOFFitter));
      ::MuonResiduals6DOFFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonResiduals6DOFFitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonResiduals6DOFFitter", "./MuonResiduals6DOFFitter.h", 19,
                  typeid(::MuonResiduals6DOFFitter), DefineBehavior(ptr, ptr),
                  &MuonResiduals6DOFFitter_ShowMembers, &MuonResiduals6DOFFitter_Dictionary, isa_proxy, 4,
                  sizeof(::MuonResiduals6DOFFitter) );
      instance.SetDelete(&delete_MuonResiduals6DOFFitter);
      instance.SetDeleteArray(&deleteArray_MuonResiduals6DOFFitter);
      instance.SetDestructor(&destruct_MuonResiduals6DOFFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonResiduals6DOFFitter*)
   {
      return GenerateInitInstanceLocal((::MuonResiduals6DOFFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonResiduals6DOFFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonResiduals6DOFFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonResiduals6DOFFitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonResiduals5DOFFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonResiduals5DOFFitter_Dictionary();
   static void delete_MuonResiduals5DOFFitter(void *p);
   static void deleteArray_MuonResiduals5DOFFitter(void *p);
   static void destruct_MuonResiduals5DOFFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonResiduals5DOFFitter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonResiduals5DOFFitter) == sizeof(::ROOT::Shadow::MuonResiduals5DOFFitter));
      ::MuonResiduals5DOFFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonResiduals5DOFFitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonResiduals5DOFFitter", "./MuonResiduals5DOFFitter.h", 19,
                  typeid(::MuonResiduals5DOFFitter), DefineBehavior(ptr, ptr),
                  &MuonResiduals5DOFFitter_ShowMembers, &MuonResiduals5DOFFitter_Dictionary, isa_proxy, 4,
                  sizeof(::MuonResiduals5DOFFitter) );
      instance.SetDelete(&delete_MuonResiduals5DOFFitter);
      instance.SetDeleteArray(&deleteArray_MuonResiduals5DOFFitter);
      instance.SetDestructor(&destruct_MuonResiduals5DOFFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonResiduals5DOFFitter*)
   {
      return GenerateInitInstanceLocal((::MuonResiduals5DOFFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonResiduals5DOFFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonResiduals5DOFFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonResiduals5DOFFitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void MuonResiduals6DOFrphiFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonResiduals6DOFrphiFitter_Dictionary();
   static void delete_MuonResiduals6DOFrphiFitter(void *p);
   static void deleteArray_MuonResiduals6DOFrphiFitter(void *p);
   static void destruct_MuonResiduals6DOFrphiFitter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonResiduals6DOFrphiFitter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonResiduals6DOFrphiFitter) == sizeof(::ROOT::Shadow::MuonResiduals6DOFrphiFitter));
      ::MuonResiduals6DOFrphiFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonResiduals6DOFrphiFitter),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonResiduals6DOFrphiFitter", "./MuonResiduals6DOFrphiFitter.h", 20,
                  typeid(::MuonResiduals6DOFrphiFitter), DefineBehavior(ptr, ptr),
                  &MuonResiduals6DOFrphiFitter_ShowMembers, &MuonResiduals6DOFrphiFitter_Dictionary, isa_proxy, 4,
                  sizeof(::MuonResiduals6DOFrphiFitter) );
      instance.SetDelete(&delete_MuonResiduals6DOFrphiFitter);
      instance.SetDeleteArray(&deleteArray_MuonResiduals6DOFrphiFitter);
      instance.SetDestructor(&destruct_MuonResiduals6DOFrphiFitter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonResiduals6DOFrphiFitter*)
   {
      return GenerateInitInstanceLocal((::MuonResiduals6DOFrphiFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonResiduals6DOFrphiFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonResiduals6DOFrphiFitter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonResiduals6DOFrphiFitter*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *MuonResidualsFitterFitInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *MuonResidualsFitterFitInfo::Class_Name()
{
   return "MuonResidualsFitterFitInfo";
}

//______________________________________________________________________________
const char *MuonResidualsFitterFitInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitterFitInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MuonResidualsFitterFitInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitterFitInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MuonResidualsFitterFitInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitterFitInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MuonResidualsFitterFitInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitterFitInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void Alignable_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Alignable.
      typedef ::ROOT::Shadow::Alignable ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Alignable*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s", (void*)&sobj->s);
      R__insp.InspectMember("Alignable::Surface", (void*)&sobj->s, "s.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Alignable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Alignable : new ::Alignable;
   }
   static void *newArray_Alignable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Alignable[nElements] : new ::Alignable[nElements];
   }
   // Wrapper around operator delete
   static void delete_Alignable(void *p) {
      delete ((::Alignable*)p);
   }
   static void deleteArray_Alignable(void *p) {
      delete [] ((::Alignable*)p);
   }
   static void destruct_Alignable(void *p) {
      typedef ::Alignable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Alignable

//______________________________________________________________________________
namespace ROOT {
   void AlignablecLcLSurface_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Alignable::Surface.
      typedef ::ROOT::Shadow::Alignable::Surface ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Alignable::Surface*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_AlignablecLcLSurface(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Alignable::Surface : new ::Alignable::Surface;
   }
   static void *newArray_AlignablecLcLSurface(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Alignable::Surface[nElements] : new ::Alignable::Surface[nElements];
   }
   // Wrapper around operator delete
   static void delete_AlignablecLcLSurface(void *p) {
      delete ((::Alignable::Surface*)p);
   }
   static void deleteArray_AlignablecLcLSurface(void *p) {
      delete [] ((::Alignable::Surface*)p);
   }
   static void destruct_AlignablecLcLSurface(void *p) {
      typedef ::Alignable::Surface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Alignable::Surface

//______________________________________________________________________________
namespace ROOT {
   void TFileDirectory_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TFileDirectory.
      typedef ::ROOT::Shadow::TFileDirectory ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TFileDirectory*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TFileDirectory(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TFileDirectory : new ::TFileDirectory;
   }
   static void *newArray_TFileDirectory(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TFileDirectory[nElements] : new ::TFileDirectory[nElements];
   }
   // Wrapper around operator delete
   static void delete_TFileDirectory(void *p) {
      delete ((::TFileDirectory*)p);
   }
   static void deleteArray_TFileDirectory(void *p) {
      delete [] ((::TFileDirectory*)p);
   }
   static void destruct_TFileDirectory(void *p) {
      typedef ::TFileDirectory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TFileDirectory

//______________________________________________________________________________
namespace ROOT {
   void cmscLcLException_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class cms::Exception.
      typedef ::ROOT::Shadow::cms::Exception ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::cms::Exception*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&sobj->name);
      R__insp.InspectMember("string", (void*)&sobj->name, "name.", false);
      R__insp.GenericShowMembers("exception", ( ::exception * )( (::cms::Exception*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_cmscLcLException(void *p) {
      delete ((::cms::Exception*)p);
   }
   static void deleteArray_cmscLcLException(void *p) {
      delete [] ((::cms::Exception*)p);
   }
   static void destruct_cmscLcLException(void *p) {
      typedef ::cms::Exception current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::cms::Exception

//______________________________________________________________________________
namespace ROOT {
   void MuonResidualsFitter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonResidualsFitter.
      typedef ::ROOT::Shadow::MuonResidualsFitter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_ali", (void*)&sobj->m_ali);
      R__insp.InspectMember("Alignable", (void*)&sobj->m_ali, "m_ali.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_dir", (void*)&sobj->m_dir);
      R__insp.InspectMember("TFileDirectory", (void*)&sobj->m_dir, "m_dir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_peakNSigma", &sobj->m_peakNSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_residualsModel", &sobj->m_residualsModel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_minHits", &sobj->m_minHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_useResiduals", &sobj->m_useResiduals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_weightAlignment", &sobj->m_weightAlignment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_fixed", (void*)&sobj->m_fixed);
      R__insp.InspectMember("vector<bool>", (void*)&sobj->m_fixed, "m_fixed.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_parNum2InitValue", (void*)&sobj->m_parNum2InitValue);
      R__insp.InspectMember("map<int,double>", (void*)&sobj->m_parNum2InitValue, "m_parNum2InitValue.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_printLevel", &sobj->m_printLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_strategy", &sobj->m_strategy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_residuals", (void*)&sobj->m_residuals);
      R__insp.InspectMember("vector<double*>", (void*)&sobj->m_residuals, "m_residuals.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_residuals_ok", (void*)&sobj->m_residuals_ok);
      R__insp.InspectMember("vector<bool>", (void*)&sobj->m_residuals_ok, "m_residuals_ok.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_value", (void*)&sobj->m_value);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_value, "m_value.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_error", (void*)&sobj->m_error);
      R__insp.InspectMember("vector<double>", (void*)&sobj->m_error, "m_error.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_cov", &sobj->m_cov);
      R__insp.InspectMember(sobj->m_cov, "m_cov.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_loglikelihood", &sobj->m_loglikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_parNum2parIdx", (void*)&sobj->m_parNum2parIdx);
      R__insp.InspectMember("map<int,int>", (void*)&sobj->m_parNum2parIdx, "m_parNum2parIdx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_center[20]", sobj->m_center);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_radii[20]", sobj->m_radii);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonResidualsFitter(void *p) {
      delete ((::MuonResidualsFitter*)p);
   }
   static void deleteArray_MuonResidualsFitter(void *p) {
      delete [] ((::MuonResidualsFitter*)p);
   }
   static void destruct_MuonResidualsFitter(void *p) {
      typedef ::MuonResidualsFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonResidualsFitter

//______________________________________________________________________________
namespace ROOT {
   void MuonResidualsFittercLcLMuonAlignmentTreeRow_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonResidualsFitter::MuonAlignmentTreeRow.
      typedef ::ROOT::Shadow::MuonResidualsFitter::MuonAlignmentTreeRow ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonResidualsFitter::MuonAlignmentTreeRow*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_plus", &sobj->is_plus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "is_dt", &sobj->is_dt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "station", &sobj->station);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ring_wheel", &sobj->ring_wheel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sobj->sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_x", &sobj->res_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_y", &sobj->res_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_slope_x", &sobj->res_slope_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res_slope_y", &sobj->res_slope_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_x", &sobj->pos_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_y", &sobj->pos_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angle_x", &sobj->angle_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angle_y", &sobj->angle_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &sobj->pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &sobj->pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q", &sobj->q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &sobj->select);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonResidualsFitter::MuonAlignmentTreeRow : new ::MuonResidualsFitter::MuonAlignmentTreeRow;
   }
   static void *newArray_MuonResidualsFittercLcLMuonAlignmentTreeRow(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonResidualsFitter::MuonAlignmentTreeRow[nElements] : new ::MuonResidualsFitter::MuonAlignmentTreeRow[nElements];
   }
   // Wrapper around operator delete
   static void delete_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p) {
      delete ((::MuonResidualsFitter::MuonAlignmentTreeRow*)p);
   }
   static void deleteArray_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p) {
      delete [] ((::MuonResidualsFitter::MuonAlignmentTreeRow*)p);
   }
   static void destruct_MuonResidualsFittercLcLMuonAlignmentTreeRow(void *p) {
      typedef ::MuonResidualsFitter::MuonAlignmentTreeRow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonResidualsFitter::MuonAlignmentTreeRow

//______________________________________________________________________________
void MuonResidualsFitterFitInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class MuonResidualsFitterFitInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MuonResidualsFitterFitInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(MuonResidualsFitterFitInfo::Class(),this);
   }
}

//______________________________________________________________________________
void MuonResidualsFitterFitInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MuonResidualsFitterFitInfo.
      TClass *R__cl = ::MuonResidualsFitterFitInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_fitter", &m_fitter);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonResidualsFitterFitInfo(void *p) {
      delete ((::MuonResidualsFitterFitInfo*)p);
   }
   static void deleteArray_MuonResidualsFitterFitInfo(void *p) {
      delete [] ((::MuonResidualsFitterFitInfo*)p);
   }
   static void destruct_MuonResidualsFitterFitInfo(void *p) {
      typedef ::MuonResidualsFitterFitInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonResidualsFitterFitInfo

//______________________________________________________________________________
namespace ROOT {
   void MuonResiduals6DOFFitter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonResiduals6DOFFitter.
      typedef ::ROOT::Shadow::MuonResiduals6DOFFitter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonResiduals6DOFFitter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("MuonResidualsFitter", ( ::MuonResidualsFitter * )( (::MuonResiduals6DOFFitter*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonResiduals6DOFFitter(void *p) {
      delete ((::MuonResiduals6DOFFitter*)p);
   }
   static void deleteArray_MuonResiduals6DOFFitter(void *p) {
      delete [] ((::MuonResiduals6DOFFitter*)p);
   }
   static void destruct_MuonResiduals6DOFFitter(void *p) {
      typedef ::MuonResiduals6DOFFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonResiduals6DOFFitter

//______________________________________________________________________________
namespace ROOT {
   void MuonResiduals5DOFFitter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonResiduals5DOFFitter.
      typedef ::ROOT::Shadow::MuonResiduals5DOFFitter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonResiduals5DOFFitter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("MuonResidualsFitter", ( ::MuonResidualsFitter * )( (::MuonResiduals5DOFFitter*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonResiduals5DOFFitter(void *p) {
      delete ((::MuonResiduals5DOFFitter*)p);
   }
   static void deleteArray_MuonResiduals5DOFFitter(void *p) {
      delete [] ((::MuonResiduals5DOFFitter*)p);
   }
   static void destruct_MuonResiduals5DOFFitter(void *p) {
      typedef ::MuonResiduals5DOFFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonResiduals5DOFFitter

//______________________________________________________________________________
namespace ROOT {
   void MuonResiduals6DOFrphiFitter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonResiduals6DOFrphiFitter.
      typedef ::ROOT::Shadow::MuonResiduals6DOFrphiFitter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonResiduals6DOFrphiFitter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("MuonResidualsFitter", ( ::MuonResidualsFitter * )( (::MuonResiduals6DOFrphiFitter*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_MuonResiduals6DOFrphiFitter(void *p) {
      delete ((::MuonResiduals6DOFrphiFitter*)p);
   }
   static void deleteArray_MuonResiduals6DOFrphiFitter(void *p) {
      delete [] ((::MuonResiduals6DOFrphiFitter*)p);
   }
   static void destruct_MuonResiduals6DOFrphiFitter(void *p) {
      typedef ::MuonResiduals6DOFrphiFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonResiduals6DOFrphiFitter

namespace ROOT {
   void maplEintcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOdoublegR_Dictionary();
   static void *new_maplEintcOdoublegR(void *p = 0);
   static void *newArray_maplEintcOdoublegR(Long_t size, void *p);
   static void delete_maplEintcOdoublegR(void *p);
   static void deleteArray_maplEintcOdoublegR(void *p);
   static void destruct_maplEintcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,double>*)
   {
      map<int,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,double>", -2, "prec_stl/map", 63,
                  typeid(map<int,double>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,double>) );
      instance.SetNew(&new_maplEintcOdoublegR);
      instance.SetNewArray(&newArray_maplEintcOdoublegR);
      instance.SetDelete(&delete_maplEintcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEintcOdoublegR);
      instance.SetDestructor(&destruct_maplEintcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double> : new map<int,double>;
   }
   static void *newArray_maplEintcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,double>[nElements] : new map<int,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOdoublegR(void *p) {
      delete ((map<int,double>*)p);
   }
   static void deleteArray_maplEintcOdoublegR(void *p) {
      delete [] ((map<int,double>*)p);
   }
   static void destruct_maplEintcOdoublegR(void *p) {
      typedef map<int,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,double>

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEdoublemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublemUgR_Dictionary();
   static void *new_vectorlEdoublemUgR(void *p = 0);
   static void *newArray_vectorlEdoublemUgR(Long_t size, void *p);
   static void delete_vectorlEdoublemUgR(void *p);
   static void deleteArray_vectorlEdoublemUgR(void *p);
   static void destruct_vectorlEdoublemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double*>*)
   {
      vector<double*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double*>", -2, "prec_stl/vector", 49,
                  typeid(vector<double*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double*>) );
      instance.SetNew(&new_vectorlEdoublemUgR);
      instance.SetNewArray(&newArray_vectorlEdoublemUgR);
      instance.SetDelete(&delete_vectorlEdoublemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublemUgR);
      instance.SetDestructor(&destruct_vectorlEdoublemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double*> : new vector<double*>;
   }
   static void *newArray_vectorlEdoublemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double*>[nElements] : new vector<double*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublemUgR(void *p) {
      delete ((vector<double*>*)p);
   }
   static void deleteArray_vectorlEdoublemUgR(void *p) {
      delete [] ((vector<double*>*)p);
   }
   static void destruct_vectorlEdoublemUgR(void *p) {
      typedef vector<double*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

/********************************************************
* MuonResidualsFitterDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMuonResidualsFitterDict();

extern "C" void G__set_cpp_environmentMuonResidualsFitterDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MuonResidualsFitter.h");
  G__add_compiledheader("MuonResiduals6DOFFitter.h");
  G__add_compiledheader("MuonResiduals5DOFFitter.h");
  G__add_compiledheader("MuonResiduals6DOFrphiFitter.h");
  G__cpp_reset_tagtableMuonResidualsFitterDict();
}
#include <new>
extern "C" int G__cpp_dllrevMuonResidualsFitterDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Alignable */
static int G__MuonResidualsFitterDict_507_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Alignable::Surface& obj = ((Alignable*) G__getstructoffset())->surface();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MuonResidualsFitterDict_507_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alignable *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alignable[n];
     } else {
       p = new((void*) gvp) Alignable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alignable;
     } else {
       p = new((void*) gvp) Alignable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_507_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Alignable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Alignable(*(Alignable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Alignable G__TAlignable;
static int G__MuonResidualsFitterDict_507_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Alignable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Alignable*) (soff+(sizeof(Alignable)*i)))->~G__TAlignable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Alignable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Alignable*) (soff))->~G__TAlignable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_507_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alignable* dest = (Alignable*) G__getstructoffset();
   *dest = *(Alignable*) libp->para[0].ref;
   const Alignable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Alignable::Surface */
static int G__MuonResidualsFitterDict_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Alignable::Surface*) G__getstructoffset())->width());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Alignable::Surface*) G__getstructoffset())->length());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__MuonResidualsFitterDict_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alignable::Surface *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alignable::Surface[n];
     } else {
       p = new((void*) gvp) Alignable::Surface[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alignable::Surface;
     } else {
       p = new((void*) gvp) Alignable::Surface;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Alignable::Surface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Alignable::Surface(*(Alignable::Surface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Alignable::Surface G__TAlignablecLcLSurface;
static int G__MuonResidualsFitterDict_508_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Alignable::Surface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Alignable::Surface*) (soff+(sizeof(Alignable::Surface)*i)))->~G__TAlignablecLcLSurface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Alignable::Surface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Alignable::Surface*) (soff))->~G__TAlignablecLcLSurface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_508_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alignable::Surface* dest = (Alignable::Surface*) G__getstructoffset();
   const Alignable::Surface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TFileDirectory */
// automatic default constructor
static int G__MuonResidualsFitterDict_509_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileDirectory *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileDirectory[n];
     } else {
       p = new((void*) gvp) TFileDirectory[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TFileDirectory;
     } else {
       p = new((void*) gvp) TFileDirectory;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_509_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TFileDirectory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TFileDirectory(*(TFileDirectory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TFileDirectory G__TTFileDirectory;
static int G__MuonResidualsFitterDict_509_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TFileDirectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TFileDirectory*) (soff+(sizeof(TFileDirectory)*i)))->~G__TTFileDirectory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TFileDirectory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TFileDirectory*) (soff))->~G__TTFileDirectory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_509_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TFileDirectory* dest = (TFileDirectory*) G__getstructoffset();
   const TFileDirectory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* cms */

/* cms::Exception */
static int G__MuonResidualsFitterDict_515_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cms::Exception* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new cms::Exception(*(string*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) cms::Exception(*(string*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_515_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   cms::Exception* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new cms::Exception(*(cms::Exception*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef cms::Exception G__TcmscLcLException;
static int G__MuonResidualsFitterDict_515_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (cms::Exception*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((cms::Exception*) (soff+(sizeof(cms::Exception)*i)))->~G__TcmscLcLException();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (cms::Exception*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((cms::Exception*) (soff))->~G__TcmscLcLException();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_515_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   cms::Exception* dest = (cms::Exception*) G__getstructoffset();
   *dest = *(cms::Exception*) libp->para[0].ref;
   const cms::Exception& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonResidualsFitter */
static int G__MuonResidualsFitterDict_516_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MuonResidualsFitter*) G__getstructoffset())->type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonResidualsFitter*) G__getstructoffset())->npar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonResidualsFitter*) G__getstructoffset())->ndata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((MuonResidualsFitter*) G__getstructoffset())->useRes((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((MuonResidualsFitter*) G__getstructoffset())->useRes());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const MuonResidualsFitter*) G__getstructoffset())->residualsModel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const MuonResidualsFitter*) G__getstructoffset())->numResiduals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonResidualsFitter*) G__getstructoffset())->fix((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonResidualsFitter*) G__getstructoffset())->fix((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonResidualsFitter*) G__getstructoffset())->fixed((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonResidualsFitter*) G__getstructoffset())->nfixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->setInitialValue((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->setPrintLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->setStrategy((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->fill((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonResidualsFitter*) G__getstructoffset())->fit((Alignable*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((MuonResidualsFitter*) G__getstructoffset())->fitSpecial(*(string*) libp->para[0].ref, (Alignable*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MuonResidualsFitter*) G__getstructoffset())->fitSpecial(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->value((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->errorerror((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonResidualsFitter*) G__getstructoffset())->parNum2parIdx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TMatrixDSym* pobj;
         TMatrixDSym xobj = ((MuonResidualsFitter*) G__getstructoffset())->covarianceMatrix();
         pobj = new TMatrixDSym(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->covarianceElement((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TMatrixDSym* pobj;
         TMatrixDSym xobj = ((MuonResidualsFitter*) G__getstructoffset())->correlationMatrix();
         pobj = new TMatrixDSym(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->loglikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((MuonResidualsFitter*) G__getstructoffset())->numsegments());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->sumofweights());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->plot(*((string*) G__int(libp->para[0])), (TFileDirectory*) G__int(libp->para[1])
, (Alignable*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->plotsimple(*((string*) G__int(libp->para[0])), (TFileDirectory*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->plotweighted(*((string*) G__int(libp->para[0])), (TFileDirectory*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonResidualsFitter*) G__getstructoffset())->fit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->plot(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->plotsimple(*(string*) libp->para[0].ref, (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->plotweighted(*(string*) libp->para[0].ref, (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonResidualsFitter*) G__getstructoffset())->write((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonResidualsFitter*) G__getstructoffset())->write((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MuonResidualsFitter*) G__getstructoffset())->read((FILE*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MuonResidualsFitter*) G__getstructoffset())->read((FILE*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double*,allocator<double*> >::const_iterator* pobj;
         const vector<double*,allocator<double*> >::const_iterator xobj = ((const MuonResidualsFitter*) G__getstructoffset())->residuals_begin();
         pobj = new vector<double*,allocator<double*> >::const_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double*,allocator<double*> >::const_iterator* pobj;
         const vector<double*,allocator<double*> >::const_iterator xobj = ((const MuonResidualsFitter*) G__getstructoffset())->residuals_end();
         pobj = new vector<double*,allocator<double*> >::const_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->computeHistogramRangeAndBinning((int) G__int(libp->para[0]), *(int*) G__Intref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->histogramChi2GaussianFit((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->getPeak((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((MuonResidualsFitter*) G__getstructoffset())->getPeak((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->selectPeakResiduals_simple((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->selectPeakResiduals((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->correctBField();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->correctBField((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool>& obj = ((MuonResidualsFitter*) G__getstructoffset())->selectedResidualsFlags();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_516_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitter*) G__getstructoffset())->eraseNotSelectedResiduals();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonResidualsFitter G__TMuonResidualsFitter;
static int G__MuonResidualsFitterDict_516_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonResidualsFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonResidualsFitter*) (soff+(sizeof(MuonResidualsFitter)*i)))->~G__TMuonResidualsFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonResidualsFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonResidualsFitter*) (soff))->~G__TMuonResidualsFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_516_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResidualsFitter* dest = (MuonResidualsFitter*) G__getstructoffset();
   *dest = *(MuonResidualsFitter*) libp->para[0].ref;
   const MuonResidualsFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonResidualsFitter::MuonAlignmentTreeRow */
// automatic default constructor
static int G__MuonResidualsFitterDict_518_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResidualsFitter::MuonAlignmentTreeRow *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResidualsFitter::MuonAlignmentTreeRow[n];
     } else {
       p = new((void*) gvp) MuonResidualsFitter::MuonAlignmentTreeRow[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResidualsFitter::MuonAlignmentTreeRow;
     } else {
       p = new((void*) gvp) MuonResidualsFitter::MuonAlignmentTreeRow;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_518_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonResidualsFitter::MuonAlignmentTreeRow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonResidualsFitter::MuonAlignmentTreeRow(*(MuonResidualsFitter::MuonAlignmentTreeRow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonResidualsFitter::MuonAlignmentTreeRow G__TMuonResidualsFittercLcLMuonAlignmentTreeRow;
static int G__MuonResidualsFitterDict_518_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonResidualsFitter::MuonAlignmentTreeRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonResidualsFitter::MuonAlignmentTreeRow*) (soff+(sizeof(MuonResidualsFitter::MuonAlignmentTreeRow)*i)))->~G__TMuonResidualsFittercLcLMuonAlignmentTreeRow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonResidualsFitter::MuonAlignmentTreeRow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonResidualsFitter::MuonAlignmentTreeRow*) (soff))->~G__TMuonResidualsFittercLcLMuonAlignmentTreeRow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_518_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResidualsFitter::MuonAlignmentTreeRow* dest = (MuonResidualsFitter::MuonAlignmentTreeRow*) G__getstructoffset();
   *dest = *(MuonResidualsFitter::MuonAlignmentTreeRow*) libp->para[0].ref;
   const MuonResidualsFitter::MuonAlignmentTreeRow& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonResidualsFitterFitInfo */
static int G__MuonResidualsFitterDict_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResidualsFitterFitInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MuonResidualsFitterFitInfo((MuonResidualsFitter*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MuonResidualsFitterFitInfo((MuonResidualsFitter*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((MuonResidualsFitterFitInfo*) G__getstructoffset())->fitter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MuonResidualsFitterFitInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonResidualsFitterFitInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MuonResidualsFitterFitInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MuonResidualsFitterFitInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonResidualsFitterFitInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonResidualsFitterFitInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuonResidualsFitterFitInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MuonResidualsFitterFitInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MuonResidualsFitterFitInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonResidualsFitterFitInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonResidualsFitterFitInfo(*(MuonResidualsFitterFitInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonResidualsFitterFitInfo G__TMuonResidualsFitterFitInfo;
static int G__MuonResidualsFitterDict_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonResidualsFitterFitInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonResidualsFitterFitInfo*) (soff+(sizeof(MuonResidualsFitterFitInfo)*i)))->~G__TMuonResidualsFitterFitInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonResidualsFitterFitInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonResidualsFitterFitInfo*) (soff))->~G__TMuonResidualsFitterFitInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_538_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResidualsFitterFitInfo* dest = (MuonResidualsFitterFitInfo*) G__getstructoffset();
   *dest = *(MuonResidualsFitterFitInfo*) libp->para[0].ref;
   const MuonResidualsFitterFitInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonResiduals6DOFFitter */
static int G__MuonResidualsFitterDict_540_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResiduals6DOFFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResiduals6DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MuonResiduals6DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResiduals6DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MuonResiduals6DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_540_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonResiduals6DOFFitter*) G__getstructoffset())->fit_xphiz_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_540_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MuonResiduals6DOFFitter*) G__getstructoffset())->fit_xphiyphiz_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_540_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((MuonResiduals6DOFFitter*) G__getstructoffset())->readNtuple(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((MuonResiduals6DOFFitter*) G__getstructoffset())->readNtuple(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_540_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonResiduals6DOFFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonResiduals6DOFFitter(*(MuonResiduals6DOFFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonResiduals6DOFFitter G__TMuonResiduals6DOFFitter;
static int G__MuonResidualsFitterDict_540_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonResiduals6DOFFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonResiduals6DOFFitter*) (soff+(sizeof(MuonResiduals6DOFFitter)*i)))->~G__TMuonResiduals6DOFFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonResiduals6DOFFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonResiduals6DOFFitter*) (soff))->~G__TMuonResiduals6DOFFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_540_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResiduals6DOFFitter* dest = (MuonResiduals6DOFFitter*) G__getstructoffset();
   *dest = *(MuonResiduals6DOFFitter*) libp->para[0].ref;
   const MuonResiduals6DOFFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonResiduals5DOFFitter */
static int G__MuonResidualsFitterDict_542_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResiduals5DOFFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResiduals5DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MuonResiduals5DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResiduals5DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MuonResiduals5DOFFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_542_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((MuonResiduals5DOFFitter*) G__getstructoffset())->readNtuple(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((MuonResiduals5DOFFitter*) G__getstructoffset())->readNtuple(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_542_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonResiduals5DOFFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonResiduals5DOFFitter(*(MuonResiduals5DOFFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonResiduals5DOFFitter G__TMuonResiduals5DOFFitter;
static int G__MuonResidualsFitterDict_542_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonResiduals5DOFFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonResiduals5DOFFitter*) (soff+(sizeof(MuonResiduals5DOFFitter)*i)))->~G__TMuonResiduals5DOFFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonResiduals5DOFFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonResiduals5DOFFitter*) (soff))->~G__TMuonResiduals5DOFFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_542_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResiduals5DOFFitter* dest = (MuonResiduals5DOFFitter*) G__getstructoffset();
   *dest = *(MuonResiduals5DOFFitter*) libp->para[0].ref;
   const MuonResiduals5DOFFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MuonResiduals6DOFrphiFitter */
static int G__MuonResidualsFitterDict_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResiduals6DOFrphiFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResiduals6DOFrphiFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MuonResiduals6DOFrphiFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonResiduals6DOFrphiFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MuonResiduals6DOFrphiFitter(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((MuonResiduals6DOFrphiFitter*) G__getstructoffset())->readNtuple(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (unsigned int) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((MuonResiduals6DOFrphiFitter*) G__getstructoffset())->readNtuple(*((string*) G__int(libp->para[0])), (unsigned int) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MuonResidualsFitterDict_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonResiduals6DOFrphiFitter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonResiduals6DOFrphiFitter(*(MuonResiduals6DOFrphiFitter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonResiduals6DOFrphiFitter G__TMuonResiduals6DOFrphiFitter;
static int G__MuonResidualsFitterDict_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonResiduals6DOFrphiFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonResiduals6DOFrphiFitter*) (soff+(sizeof(MuonResiduals6DOFrphiFitter)*i)))->~G__TMuonResiduals6DOFrphiFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonResiduals6DOFrphiFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonResiduals6DOFrphiFitter*) (soff))->~G__TMuonResiduals6DOFrphiFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MuonResidualsFitterDict_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonResiduals6DOFrphiFitter* dest = (MuonResiduals6DOFrphiFitter*) G__getstructoffset();
   *dest = *(MuonResiduals6DOFrphiFitter*) libp->para[0].ref;
   const MuonResiduals6DOFrphiFitter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__MuonResidualsFitterDict__0_2067(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_integrate_pureGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2068(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_logPureGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2069(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_pureGaussian_TF1((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2070(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_logPureGaussian2D(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2071(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) MuonResidualsFitter_compute_log_convolution((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) MuonResidualsFitter_compute_log_convolution((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MuonResidualsFitter_compute_log_convolution((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MuonResidualsFitter_compute_log_convolution((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2072(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_logPowerLawTails((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2073(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_powerLawTails_TF1((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2074(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_logROOTVoigt((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2075(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_ROOTVoigt_TF1((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2076(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_logGaussPowerTails((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2077(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MuonResidualsFitter_GaussPowerTails_TF1((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2078(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MuonResidualsPositionFitter_FCN(*(int*) G__Intref(&libp->para[0]), (double*) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MuonResidualsFitterDict__0_2079(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MuonResidualsAngleFitter_FCN(*(int*) G__Intref(&libp->para[0]), (double*) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* Alignable */

/* Alignable::Surface */

/* TFileDirectory */

/* cms */

/* cms::Exception */

/* MuonResidualsFitter */

/* MuonResidualsFitter::MuonAlignmentTreeRow */

/* MuonResidualsFitterFitInfo */

/* MuonResiduals6DOFFitter */

/* MuonResiduals5DOFFitter */

/* MuonResiduals6DOFrphiFitter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMuonResidualsFitterDict {
 public:
  G__Sizep2memfuncMuonResidualsFitterDict(): p(&G__Sizep2memfuncMuonResidualsFitterDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMuonResidualsFitterDict::*p)();
};

size_t G__get_sizep2memfuncMuonResidualsFitterDict()
{
  G__Sizep2memfuncMuonResidualsFitterDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMuonResidualsFitterDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException))) {
     cms::Exception *G__Lderived;
     G__Lderived=(cms::Exception*)0x1000;
     {
       exception *G__Lpbase=(exception*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException),G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_exception),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo))) {
     MuonResidualsFitterFitInfo *G__Lderived;
     G__Lderived=(MuonResidualsFitterFitInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo),G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter))) {
     MuonResiduals6DOFFitter *G__Lderived;
     G__Lderived=(MuonResiduals6DOFFitter*)0x1000;
     {
       MuonResidualsFitter *G__Lpbase=(MuonResidualsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter),G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter))) {
     MuonResiduals5DOFFitter *G__Lderived;
     G__Lderived=(MuonResiduals5DOFFitter*)0x1000;
     {
       MuonResidualsFitter *G__Lpbase=(MuonResidualsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter),G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter))) {
     MuonResiduals6DOFrphiFitter *G__Lderived;
     G__Lderived=(MuonResiduals6DOFrphiFitter*)0x1000;
     {
       MuonResidualsFitter *G__Lpbase=(MuonResidualsFitter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter),G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMuonResidualsFitterDict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double*>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("void (*)(int&,double*,double&,double*,int)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Alignable */
static void G__setup_memvarAlignable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable));
   { Alignable *p; p=(Alignable*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->s)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface),-1,-1,1,"s=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Alignable::Surface */
static void G__setup_memvarAlignablecLcLSurface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface));
   { Alignable::Surface *p; p=(Alignable::Surface*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TFileDirectory */
static void G__setup_memvarTFileDirectory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory));
   { TFileDirectory *p; p=(TFileDirectory*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* cms */
static void G__setup_memvarcms(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cms));
   {
   }
   G__tag_memvar_reset();
}


   /* cms::Exception */
static void G__setup_memvarcmscLcLException(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException));
   { cms::Exception *p; p=(cms::Exception*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_string),-1,-1,1,"name=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonResidualsFitter */
static void G__setup_memvarMuonResidualsFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter));
   { MuonResidualsFitter *p; p=(MuonResidualsFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPureGaussian=%lldLL",(long long)MuonResidualsFitter::kPureGaussian).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPowerLawTails=%lldLL",(long long)MuonResidualsFitter::kPowerLawTails).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kROOTVoigt=%lldLL",(long long)MuonResidualsFitter::kROOTVoigt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kGaussPowerTails=%lldLL",(long long)MuonResidualsFitter::kGaussPowerTails).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPureGaussian2D=%lldLL",(long long)MuonResidualsFitter::kPureGaussian2D).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k1DOF=%lldLL",(long long)MuonResidualsFitter::k1DOF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k5DOF=%lldLL",(long long)MuonResidualsFitter::k5DOF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k6DOF=%lldLL",(long long)MuonResidualsFitter::k6DOF).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k6DOFrphi=%lldLL",(long long)MuonResidualsFitter::k6DOFrphi).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionFitter=%lldLL",(long long)MuonResidualsFitter::kPositionFitter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleFitter=%lldLL",(long long)MuonResidualsFitter::kAngleFitter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleBfieldFitter=%lldLL",(long long)MuonResidualsFitter::kAngleBfieldFitter).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k1111=%lldLL",(long long)MuonResidualsFitter::k1111).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k1110=%lldLL",(long long)MuonResidualsFitter::k1110).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k1100=%lldLL",(long long)MuonResidualsFitter::k1100).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k1010=%lldLL",(long long)MuonResidualsFitter::k1010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k1000=%lldLL",(long long)MuonResidualsFitter::k1000).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k0100=%lldLL",(long long)MuonResidualsFitter::k0100).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("k0010=%lldLL",(long long)MuonResidualsFitter::k0010).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_ali)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable),-1,-1,1,"m_ali=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_dir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory),-1,-1,1,"m_dir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->m_peakNSigma)-(long)(p)),102,0,0,-1,-1,-1,1,"m_peakNSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"m_residualsModel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"m_minHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"m_useResiduals=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"m_weightAlignment=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,2,"m_fixed=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,2,"m_parNum2InitValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"m_printLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"m_strategy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR),G__defined_typename("vector<double*>"),-1,2,"m_residuals=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,2,"m_residuals_ok=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_value=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"m_error=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"m_cov=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m_loglikelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,2,"m_parNum2parIdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m_center[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m_radii[20]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonResidualsFitter::MuonAlignmentTreeRow */
static void G__setup_memvarMuonResidualsFittercLcLMuonAlignmentTreeRow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow));
   { MuonResidualsFitter::MuonAlignmentTreeRow *p; p=(MuonResidualsFitter::MuonAlignmentTreeRow*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->is_plus)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is_plus=",0,"for +- endcap");
   G__memvar_setup((void*)((long)(&p->is_dt)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"is_dt=",0,"DT or CSC");
   G__memvar_setup((void*)((long)(&p->station)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"station=",0,"8bit uint");
   G__memvar_setup((void*)((long)(&p->ring_wheel)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"ring_wheel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sector)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"sector=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"res_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"res_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res_slope_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"res_slope_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res_slope_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"res_slope_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pos_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pos_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->angle_x)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"angle_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->angle_y)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"angle_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->q)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"q=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"select=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonResidualsFitterFitInfo */
static void G__setup_memvarMuonResidualsFitterFitInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo));
   { MuonResidualsFitterFitInfo *p; p=(MuonResidualsFitterFitInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter),-1,-1,4,"m_fitter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonResiduals6DOFFitter */
static void G__setup_memvarMuonResiduals6DOFFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter));
   { MuonResiduals6DOFFitter *p; p=(MuonResiduals6DOFFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignX=%lldLL",(long long)MuonResiduals6DOFFitter::kAlignX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignY=%lldLL",(long long)MuonResiduals6DOFFitter::kAlignY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignZ=%lldLL",(long long)MuonResiduals6DOFFitter::kAlignZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiX=%lldLL",(long long)MuonResiduals6DOFFitter::kAlignPhiX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiY=%lldLL",(long long)MuonResiduals6DOFFitter::kAlignPhiY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiZ=%lldLL",(long long)MuonResiduals6DOFFitter::kAlignPhiZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidXSigma=%lldLL",(long long)MuonResiduals6DOFFitter::kResidXSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidYSigma=%lldLL",(long long)MuonResiduals6DOFFitter::kResidYSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeXSigma=%lldLL",(long long)MuonResiduals6DOFFitter::kResSlopeXSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeYSigma=%lldLL",(long long)MuonResiduals6DOFFitter::kResSlopeYSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlphaX=%lldLL",(long long)MuonResiduals6DOFFitter::kAlphaX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlphaY=%lldLL",(long long)MuonResiduals6DOFFitter::kAlphaY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidXGamma=%lldLL",(long long)MuonResiduals6DOFFitter::kResidXGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidYGamma=%lldLL",(long long)MuonResiduals6DOFFitter::kResidYGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeXGamma=%lldLL",(long long)MuonResiduals6DOFFitter::kResSlopeXGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeYGamma=%lldLL",(long long)MuonResiduals6DOFFitter::kResSlopeYGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kNPar=%lldLL",(long long)MuonResiduals6DOFFitter::kNPar).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidX=%lldLL",(long long)MuonResiduals6DOFFitter::kResidX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidY=%lldLL",(long long)MuonResiduals6DOFFitter::kResidY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeX=%lldLL",(long long)MuonResiduals6DOFFitter::kResSlopeX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeY=%lldLL",(long long)MuonResiduals6DOFFitter::kResSlopeY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionX=%lldLL",(long long)MuonResiduals6DOFFitter::kPositionX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionY=%lldLL",(long long)MuonResiduals6DOFFitter::kPositionY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleX=%lldLL",(long long)MuonResiduals6DOFFitter::kAngleX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleY=%lldLL",(long long)MuonResiduals6DOFFitter::kAngleY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kRedChi2=%lldLL",(long long)MuonResiduals6DOFFitter::kRedChi2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPz=%lldLL",(long long)MuonResiduals6DOFFitter::kPz).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPt=%lldLL",(long long)MuonResiduals6DOFFitter::kPt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kCharge=%lldLL",(long long)MuonResiduals6DOFFitter::kCharge).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kNData=%lldLL",(long long)MuonResiduals6DOFFitter::kNData).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonResiduals5DOFFitter */
static void G__setup_memvarMuonResiduals5DOFFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter));
   { MuonResiduals5DOFFitter *p; p=(MuonResiduals5DOFFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignX=%lldLL",(long long)MuonResiduals5DOFFitter::kAlignX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignZ=%lldLL",(long long)MuonResiduals5DOFFitter::kAlignZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiX=%lldLL",(long long)MuonResiduals5DOFFitter::kAlignPhiX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiY=%lldLL",(long long)MuonResiduals5DOFFitter::kAlignPhiY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiZ=%lldLL",(long long)MuonResiduals5DOFFitter::kAlignPhiZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidSigma=%lldLL",(long long)MuonResiduals5DOFFitter::kResidSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeSigma=%lldLL",(long long)MuonResiduals5DOFFitter::kResSlopeSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlpha=%lldLL",(long long)MuonResiduals5DOFFitter::kAlpha).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidGamma=%lldLL",(long long)MuonResiduals5DOFFitter::kResidGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeGamma=%lldLL",(long long)MuonResiduals5DOFFitter::kResSlopeGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kNPar=%lldLL",(long long)MuonResiduals5DOFFitter::kNPar).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResid=%lldLL",(long long)MuonResiduals5DOFFitter::kResid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlope=%lldLL",(long long)MuonResiduals5DOFFitter::kResSlope).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionX=%lldLL",(long long)MuonResiduals5DOFFitter::kPositionX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionY=%lldLL",(long long)MuonResiduals5DOFFitter::kPositionY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleX=%lldLL",(long long)MuonResiduals5DOFFitter::kAngleX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleY=%lldLL",(long long)MuonResiduals5DOFFitter::kAngleY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kRedChi2=%lldLL",(long long)MuonResiduals5DOFFitter::kRedChi2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPz=%lldLL",(long long)MuonResiduals5DOFFitter::kPz).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPt=%lldLL",(long long)MuonResiduals5DOFFitter::kPt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kCharge=%lldLL",(long long)MuonResiduals5DOFFitter::kCharge).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kNData=%lldLL",(long long)MuonResiduals5DOFFitter::kNData).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MuonResiduals6DOFrphiFitter */
static void G__setup_memvarMuonResiduals6DOFrphiFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter));
   { MuonResiduals6DOFrphiFitter *p; p=(MuonResiduals6DOFrphiFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignX=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlignX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignY=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlignY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignZ=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlignZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiX=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlignPhiX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiY=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlignPhiY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlignPhiZ=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlignPhiZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidSigma=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kResidSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeSigma=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kResSlopeSigma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAlpha=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAlpha).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResidGamma=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kResidGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlopeGamma=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kResSlopeGamma).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kNPar=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kNPar).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResid=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kResid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kResSlope=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kResSlope).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionX=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kPositionX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPositionY=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kPositionY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleX=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAngleX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kAngleY=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kAngleY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kRedChi2=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kRedChi2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPz=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kPz).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kPt=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kPt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kCharge=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kCharge).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),-1,-2,1,G__FastAllocString(4096).Format("kNData=%lldLL",(long long)MuonResiduals6DOFrphiFitter::kNData).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMuonResidualsFitterDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAlignable(void) {
   /* Alignable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable));
   G__memfunc_setup("surface",745,G__MuonResidualsFitterDict_507_0_1, 117, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("Alignable", 895, G__MuonResidualsFitterDict_507_0_2, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Alignable", 895, G__MuonResidualsFitterDict_507_0_3, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable), -1, 0, 1, 1, 1, 0, "u 'Alignable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Alignable", 1021, G__MuonResidualsFitterDict_507_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_507_0_5, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_Alignable), -1, 1, 1, 1, 1, 0, "u 'Alignable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAlignablecLcLSurface(void) {
   /* Alignable::Surface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface));
   G__memfunc_setup("width",544,G__MuonResidualsFitterDict_508_0_1, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("length",642,G__MuonResidualsFitterDict_508_0_2, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("Surface", 713, G__MuonResidualsFitterDict_508_0_3, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Surface", 713, G__MuonResidualsFitterDict_508_0_4, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface), -1, 0, 1, 1, 1, 0, "u 'Alignable::Surface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Surface", 839, G__MuonResidualsFitterDict_508_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_508_0_6, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface), -1, 1, 1, 1, 1, 0, "u 'Alignable::Surface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTFileDirectory(void) {
   /* TFileDirectory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory));
   // automatic default constructor
   G__memfunc_setup("TFileDirectory", 1417, G__MuonResidualsFitterDict_509_0_1, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TFileDirectory", 1417, G__MuonResidualsFitterDict_509_0_2, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory), -1, 0, 1, 1, 1, 0, "u 'TFileDirectory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TFileDirectory", 1543, G__MuonResidualsFitterDict_509_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_509_0_4, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TFileDirectory), -1, 1, 1, 1, 1, 0, "u 'TFileDirectory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunccms(void) {
   /* cms */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cms));
   G__tag_memfunc_reset();
}

static void G__setup_memfunccmscLcLException(void) {
   /* cms::Exception */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException));
   G__memfunc_setup("Exception",943,G__MuonResidualsFitterDict_515_0_1, 105, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - s", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Exception", 943, G__MuonResidualsFitterDict_515_0_2, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException), -1, 0, 1, 1, 1, 0, "u 'cms::Exception' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Exception", 1069, G__MuonResidualsFitterDict_515_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_515_0_4, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_cmscLcLException), -1, 1, 1, 1, 1, 0, "u 'cms::Exception' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonResidualsFitter(void) {
   /* MuonResidualsFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter));
   G__memfunc_setup("type",450,G__MuonResidualsFitterDict_516_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("npar",433,G__MuonResidualsFitterDict_516_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ndata",520,G__MuonResidualsFitterDict_516_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("useRes",631,G__MuonResidualsFitterDict_516_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '-1' pattern", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("residualsModel",1469,G__MuonResidualsFitterDict_516_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numResiduals",1276,G__MuonResidualsFitterDict_516_0_7, 108, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fix",327,G__MuonResidualsFitterDict_516_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - parNum g - - 0 'true' dofix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fixed",528,G__MuonResidualsFitterDict_516_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - parNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nfixed",638,G__MuonResidualsFitterDict_516_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValue",1555,G__MuonResidualsFitterDict_516_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - parNum d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrintLevel",1361,G__MuonResidualsFitterDict_516_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - printLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStrategy",1183,G__MuonResidualsFitterDict_516_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - strategy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__MuonResidualsFitterDict_516_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - residual", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fit",323,G__MuonResidualsFitterDict_516_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("fitSpecial",1028,G__MuonResidualsFitterDict_516_0_16, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - fit_type U 'Alignable' - 0 '0' ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("value",541,G__MuonResidualsFitterDict_516_0_17, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - parNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorerror",1108,G__MuonResidualsFitterDict_516_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - parNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parNum2parIdx",1293,G__MuonResidualsFitterDict_516_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - parNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("covarianceMatrix",1680,G__MuonResidualsFitterDict_516_0_20, 117, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("covarianceElement",1765,G__MuonResidualsFitterDict_516_0_21, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - parNum1 i - - 0 - parNum2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correlationMatrix",1815,G__MuonResidualsFitterDict_516_0_22, 117, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loglikelihood",1382,G__MuonResidualsFitterDict_516_0_23, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numsegments",1206,G__MuonResidualsFitterDict_516_0_24, 108, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumofweights",1317,G__MuonResidualsFitterDict_516_0_25, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("plot",447,G__MuonResidualsFitterDict_516_0_26, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name U 'TFileDirectory' - 0 - dir "
"U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("plotsimple",1097,G__MuonResidualsFitterDict_516_0_27, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - name U 'TFileDirectory' - 0 - dir "
"i - - 0 - which d - - 0 - multiplier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plotweighted",1296,G__MuonResidualsFitterDict_516_0_28, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - name U 'TFileDirectory' - 0 - dir "
"i - - 0 - which i - - 0 - whichredchi2 "
"d - - 0 - multiplier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fit",323,G__MuonResidualsFitterDict_516_0_29, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plot",447,G__MuonResidualsFitterDict_516_0_30, 100, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("plotsimple",1097,G__MuonResidualsFitterDict_516_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 1 - name i - - 0 - which "
"d - - 0 - multiplier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plotweighted",1296,G__MuonResidualsFitterDict_516_0_32, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'string' - 1 - name i - - 0 - which "
"i - - 0 - whichredchi2 d - - 0 - multiplier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__MuonResidualsFitterDict_516_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"E - - 0 - file i - - 0 '0' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__MuonResidualsFitterDict_516_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"E - - 0 - file i - - 0 '0' which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("residuals_begin",1584,G__MuonResidualsFitterDict_516_0_35, 117, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiterator), G__defined_typename("vector<double*,allocator<double*> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("residuals_end",1378,G__MuonResidualsFitterDict_516_0_36, 117, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiterator), G__defined_typename("vector<double*,allocator<double*> >::const_iterator"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("computeHistogramRangeAndBinning",3184,G__MuonResidualsFitterDict_516_0_37, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - which i - - 1 - nbins "
"d - - 1 - a d - - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("histogramChi2GaussianFit",2418,G__MuonResidualsFitterDict_516_0_38, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - which d - - 1 - fit_mean "
"d - - 1 - fit_mean_err d - - 1 - fit_sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeak",705,G__MuonResidualsFitterDict_516_0_39, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - which", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeak",705,G__MuonResidualsFitterDict_516_0_40, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - which d - - 1 - peak_err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectPeakResiduals_simple",2710,G__MuonResidualsFitterDict_516_0_41, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - nsigma i - - 0 - nvar "
"I - - 0 - vars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectPeakResiduals",1965,G__MuonResidualsFitterDict_516_0_42, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - nsigma i - - 0 - nvar "
"I - - 0 - vars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correctBField",1304,G__MuonResidualsFitterDict_516_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("correctBField",1304,G__MuonResidualsFitterDict_516_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - idx_momentum i - - 0 - idx_q", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectedResidualsFlags",2274,G__MuonResidualsFitterDict_516_0_45, 117, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eraseNotSelectedResiduals",2582,G__MuonResidualsFitterDict_516_0_46, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize_table",1689,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dofit",534,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 7, 1, 2, 0, 
"1 - 'void (*)(int&,double*,double&,double*,int)' 0 - fcn u 'vector<int,allocator<int> >' 'vector<int>' 1 - parNum "
"u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - parName u 'vector<double,allocator<double> >' 'vector<double>' 1 - start "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - step u 'vector<double,allocator<double> >' 'vector<double>' 1 - low "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - high", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inform",651,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMinuit' - 0 - tMinuit", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~MuonResidualsFitter", 2103, G__MuonResidualsFitterDict_516_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_516_0_51, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter), -1, 1, 1, 1, 1, 0, "u 'MuonResidualsFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonResidualsFittercLcLMuonAlignmentTreeRow(void) {
   /* MuonResidualsFitter::MuonAlignmentTreeRow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow));
   // automatic default constructor
   G__memfunc_setup("MuonAlignmentTreeRow", 2054, G__MuonResidualsFitterDict_518_0_1, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MuonAlignmentTreeRow", 2054, G__MuonResidualsFitterDict_518_0_2, (int) ('i'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow), -1, 0, 1, 1, 1, 0, "u 'MuonResidualsFitter::MuonAlignmentTreeRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonAlignmentTreeRow", 2180, G__MuonResidualsFitterDict_518_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_518_0_4, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow), -1, 1, 1, 1, 1, 0, "u 'MuonResidualsFitter::MuonAlignmentTreeRow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonResidualsFitterFitInfo(void) {
   /* MuonResidualsFitterFitInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo));
   G__memfunc_setup("MuonResidualsFitterFitInfo",2664,G__MuonResidualsFitterDict_538_0_1, 105, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo), -1, 0, 1, 1, 1, 0, "U 'MuonResidualsFitter' - 0 - fitter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitter",654,G__MuonResidualsFitterDict_538_0_2, 85, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MuonResidualsFitterDict_538_0_3, 85, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MuonResidualsFitterFitInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MuonResidualsFitterDict_538_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonResidualsFitterFitInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MuonResidualsFitterDict_538_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MuonResidualsFitterFitInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MuonResidualsFitterDict_538_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MuonResidualsFitterFitInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MuonResidualsFitterDict_538_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MuonResidualsFitterDict_538_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonResidualsFitterFitInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MuonResidualsFitterDict_538_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuonResidualsFitterFitInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MuonResidualsFitterDict_538_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MuonResidualsFitterFitInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MuonResidualsFitterDict_538_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MuonResidualsFitterFitInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MuonResidualsFitterFitInfo", 2664, G__MuonResidualsFitterDict_538_0_15, (int) ('i'), 
G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo), -1, 0, 1, 1, 1, 0, "u 'MuonResidualsFitterFitInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonResidualsFitterFitInfo", 2790, G__MuonResidualsFitterDict_538_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_538_0_17, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo), -1, 1, 1, 1, 1, 0, "u 'MuonResidualsFitterFitInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonResiduals6DOFFitter(void) {
   /* MuonResiduals6DOFFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter));
   G__memfunc_setup("MuonResiduals6DOFFitter",2248,G__MuonResidualsFitterDict_540_0_1, 105, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter), -1, 0, 4, 1, 1, 0, 
"i - - 0 - residualsModel i - - 0 - minHits "
"i - - 0 - useResiduals g - - 0 'true' weightAlignment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("npar",433,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ndata",520,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sumofweights",1317,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fit",323,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fitSpecial",1028,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - fit_type U 'Alignable' - 0 '0' ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fit_xphiz_y",1197,G__MuonResidualsFitterDict_540_0_8, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fit_xphiyphiz_y",1639,G__MuonResidualsFitterDict_540_0_9, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plot",447,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name U 'TFileDirectory' - 0 - dir "
"U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("correctBField",1304,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readNtuple",1044,G__MuonResidualsFitterDict_540_0_12, 85, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TTree), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - fname h - - 0 - wheel "
"h - - 0 - station h - - 0 - sector "
"h - - 0 '1' preselected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inform",651,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMinuit' - 0 - tMinuit", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("MuonResiduals6DOFFitter", 2248, G__MuonResidualsFitterDict_540_0_14, (int) ('i'), 
G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter), -1, 0, 1, 1, 1, 0, "u 'MuonResiduals6DOFFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonResiduals6DOFFitter", 2374, G__MuonResidualsFitterDict_540_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_540_0_16, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter), -1, 1, 1, 1, 1, 0, "u 'MuonResiduals6DOFFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonResiduals5DOFFitter(void) {
   /* MuonResiduals5DOFFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter));
   G__memfunc_setup("MuonResiduals5DOFFitter",2247,G__MuonResidualsFitterDict_542_0_1, 105, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter), -1, 0, 4, 1, 1, 0, 
"i - - 0 - residualsModel i - - 0 - minHits "
"i - - 0 - useResiduals g - - 0 'true' weightAlignment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("npar",433,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ndata",520,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sumofweights",1317,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fit",323,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("plot",447,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name U 'TFileDirectory' - 0 - dir "
"U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("correctBField",1304,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readNtuple",1044,G__MuonResidualsFitterDict_542_0_9, 85, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TTree), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - fname h - - 0 - wheel "
"h - - 0 - station h - - 0 - sector "
"h - - 0 '1' preselected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inform",651,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMinuit' - 0 - tMinuit", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("MuonResiduals5DOFFitter", 2247, G__MuonResidualsFitterDict_542_0_11, (int) ('i'), 
G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter), -1, 0, 1, 1, 1, 0, "u 'MuonResiduals5DOFFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonResiduals5DOFFitter", 2373, G__MuonResidualsFitterDict_542_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_542_0_13, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter), -1, 1, 1, 1, 1, 0, "u 'MuonResiduals5DOFFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMuonResiduals6DOFrphiFitter(void) {
   /* MuonResiduals6DOFrphiFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter));
   G__memfunc_setup("MuonResiduals6DOFrphiFitter",2683,G__MuonResidualsFitterDict_544_0_1, 105, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter), -1, 0, 4, 1, 1, 0, 
"i - - 0 - residualsModel i - - 0 - minHits "
"i - - 0 - useResiduals g - - 0 'true' weightAlignment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("type",450,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("npar",433,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ndata",520,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("sumofweights",1317,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fit",323,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("plot",447,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name U 'TFileDirectory' - 0 - dir "
"U 'Alignable' - 0 - ali", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("correctBField",1304,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readNtuple",1044,G__MuonResidualsFitterDict_544_0_9, 85, G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_TTree), -1, 0, 6, 1, 1, 0, 
"u 'string' - 0 - fname h - - 0 - endcap "
"h - - 0 - station h - - 0 - ring "
"h - - 0 - chamber h - - 0 '1' preselected", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inform",651,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TMinuit' - 0 - tMinuit", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("MuonResiduals6DOFrphiFitter", 2683, G__MuonResidualsFitterDict_544_0_11, (int) ('i'), 
G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter), -1, 0, 1, 1, 1, 0, "u 'MuonResiduals6DOFrphiFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonResiduals6DOFrphiFitter", 2809, G__MuonResidualsFitterDict_544_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MuonResidualsFitterDict_544_0_13, (int) ('u'), G__get_linked_tagnum(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter), -1, 1, 1, 1, 1, 0, "u 'MuonResiduals6DOFrphiFitter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMuonResidualsFitterDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"Alignment_MuonAlignmentAlgorithms_MuonResidualsFitter_H=0",1,(char*)NULL);
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"Alignment_MuonAlignmentAlgorithms_MuonResiduals6DOFFitter_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"Alignment_MuonAlignmentAlgorithms_MuonResiduals5DOFFitter_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"Alignment_MuonAlignmentAlgorithms_MuonResiduals6DOFrphiFitter_H=0",1,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMuonResidualsFitterDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
   G__memfunc_setup("MuonResidualsFitter_integrate_pureGaussian", 4401, G__MuonResidualsFitterDict__0_2067, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - low d - - 0 - high "
"d - - 0 - center d - - 0 - sigma", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_logPureGaussian", 3633, G__MuonResidualsFitterDict__0_2068, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - residual d - - 0 - center "
"d - - 0 - sigma", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_pureGaussian_TF1", 3641, G__MuonResidualsFitterDict__0_2069, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - xvec D - 'Double_t' 0 - par", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_logPureGaussian2D", 3751, G__MuonResidualsFitterDict__0_2070, 100, -1, -1, 0, 7, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - x0 d - - 0 - y0 "
"d - - 0 - sx d - - 0 - sy "
"d - - 0 - r", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_compute_log_convolution", 4565, G__MuonResidualsFitterDict__0_2071, 100, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - toversigma d - - 0 - gammaoversigma "
"d - - 0 '1000.' max d - - 0 '0.001' step "
"d - - 0 '4.' power", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_logPowerLawTails", 3720, G__MuonResidualsFitterDict__0_2072, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - residual d - - 0 - center "
"d - - 0 - sigma d - - 0 - gamma", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_powerLawTails_TF1", 3728, G__MuonResidualsFitterDict__0_2073, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - xvec D - 'Double_t' 0 - par", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_logROOTVoigt", 3239, G__MuonResidualsFitterDict__0_2074, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - residual d - - 0 - center "
"d - - 0 - sigma d - - 0 - gamma", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_ROOTVoigt_TF1", 3215, G__MuonResidualsFitterDict__0_2075, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - xvec D - 'Double_t' 0 - par", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_logGaussPowerTails", 3943, G__MuonResidualsFitterDict__0_2076, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - residual d - - 0 - center "
"d - - 0 - sigma", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsFitter_GaussPowerTails_TF1", 3919, G__MuonResidualsFitterDict__0_2077, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - xvec D - 'Double_t' 0 - par", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsPositionFitter_FCN", 3140, G__MuonResidualsFitterDict__0_2078, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 1 - npar D - - 0 - gin "
"d - - 1 - fval D - - 0 - par "
"i - - 0 - iflag", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MuonResidualsAngleFitter_FCN", 2774, G__MuonResidualsFitterDict__0_2079, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 1 - npar D - - 0 - gin "
"d - - 1 - fval D - - 0 - par "
"i - - 0 - iflag", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMuonResidualsFitterDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MuonResidualsFitterDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMinuit = { "TMinuit" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_Alignable = { "Alignable" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_AlignablecLcLSurface = { "Alignable::Surface" , 115 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TFileDirectory = { "TFileDirectory" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_exception = { "exception" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_cms = { "cms" , 110 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_cmscLcLException = { "cms::Exception" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResidualsFitter = { "MuonResidualsFitter" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA = { "MuonResidualsFitter::$" , 101 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow = { "MuonResidualsFitter::MuonAlignmentTreeRow" , 115 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR = { "vector<double*,allocator<double*> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiterator = { "vector<double*,allocator<double*> >::iterator" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double*,allocator<double*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo = { "MuonResidualsFitterFitInfo" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter = { "MuonResiduals6DOFFitter" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA = { "MuonResiduals6DOFFitter::$" , 101 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter = { "MuonResiduals5DOFFitter" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA = { "MuonResiduals5DOFFitter::$" , 101 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter = { "MuonResiduals6DOFrphiFitter" , 99 , -1 };
G__linked_taginfo G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA = { "MuonResiduals6DOFrphiFitter::$" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMuonResidualsFitterDict() {
  G__MuonResidualsFitterDictLN_TClass.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TBuffer.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMemberInspector.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TObject.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_string.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMinuit.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_Alignable.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_AlignablecLcLSurface.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TFileDirectory.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_exception.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_cms.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_cmscLcLException.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResidualsFitter.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_TTree.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter.tagnum = -1 ;
  G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMuonResidualsFitterDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_string);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMinuit);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_Alignable),sizeof(Alignable),-1,262144,(char*)NULL,G__setup_memvarAlignable,G__setup_memfuncAlignable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_AlignablecLcLSurface),sizeof(Alignable::Surface),-1,262144,(char*)NULL,G__setup_memvarAlignablecLcLSurface,G__setup_memfuncAlignablecLcLSurface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TFileDirectory),sizeof(TFileDirectory),-1,262144,(char*)NULL,G__setup_memvarTFileDirectory,G__setup_memfuncTFileDirectory);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_exception);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_cms),0,-1,262144,(char*)NULL,G__setup_memvarcms,G__setup_memfunccms);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_cmscLcLException),sizeof(cms::Exception),-1,295936,(char*)NULL,G__setup_memvarcmscLcLException,G__setup_memfunccmscLcLException);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResidualsFitter),sizeof(MuonResidualsFitter),-1,295944,(char*)NULL,G__setup_memvarMuonResidualsFitter,G__setup_memfuncMuonResidualsFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLdA),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResidualsFittercLcLMuonAlignmentTreeRow),sizeof(MuonResidualsFitter::MuonAlignmentTreeRow),-1,262144,(char*)NULL,G__setup_memvarMuonResidualsFittercLcLMuonAlignmentTreeRow,G__setup_memfuncMuonResidualsFittercLcLMuonAlignmentTreeRow);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResidualsFitterFitInfo),sizeof(MuonResidualsFitterFitInfo),-1,323584,(char*)NULL,G__setup_memvarMuonResidualsFitterFitInfo,G__setup_memfuncMuonResidualsFitterFitInfo);
   G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFitter),sizeof(MuonResiduals6DOFFitter),-1,295936,(char*)NULL,G__setup_memvarMuonResiduals6DOFFitter,G__setup_memfuncMuonResiduals6DOFFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFFittercLcLdA),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFitter),sizeof(MuonResiduals5DOFFitter),-1,295936,(char*)NULL,G__setup_memvarMuonResiduals5DOFFitter,G__setup_memfuncMuonResiduals5DOFFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResiduals5DOFFittercLcLdA),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFitter),sizeof(MuonResiduals6DOFrphiFitter),-1,295936,(char*)NULL,G__setup_memvarMuonResiduals6DOFrphiFitter,G__setup_memfuncMuonResiduals6DOFrphiFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MuonResidualsFitterDictLN_MuonResiduals6DOFrphiFittercLcLdA),sizeof(int),-1,262144,(char*)NULL,NULL,NULL);
}
extern "C" void G__cpp_setupMuonResidualsFitterDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMuonResidualsFitterDict()");
  G__set_cpp_environmentMuonResidualsFitterDict();
  G__cpp_setup_tagtableMuonResidualsFitterDict();

  G__cpp_setup_inheritanceMuonResidualsFitterDict();

  G__cpp_setup_typetableMuonResidualsFitterDict();

  G__cpp_setup_memvarMuonResidualsFitterDict();

  G__cpp_setup_memfuncMuonResidualsFitterDict();
  G__cpp_setup_globalMuonResidualsFitterDict();
  G__cpp_setup_funcMuonResidualsFitterDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMuonResidualsFitterDict();
  return;
}
class G__cpp_setup_initMuonResidualsFitterDict {
  public:
    G__cpp_setup_initMuonResidualsFitterDict() { G__add_setup_func("MuonResidualsFitterDict",(G__incsetup)(&G__cpp_setupMuonResidualsFitterDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMuonResidualsFitterDict() { G__remove_setup_func("MuonResidualsFitterDict"); }
};
G__cpp_setup_initMuonResidualsFitterDict G__cpp_setup_initializerMuonResidualsFitterDict;

